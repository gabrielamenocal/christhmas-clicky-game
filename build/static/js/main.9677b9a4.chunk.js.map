{"version":3,"sources":["images/1.png","images/2.png","images/3.png","images/4.png","images/5.png","images/6.png","images/7.png","images/8.png","images/9.png","images/10.png","images/11.png","images/12.png","images/react.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","images","id","url","image1","clicked","image2","image3","image4","image5","image6","image7","image8","image9","image10","image11","image12","App","state","score","message","handleimageclick","_this","console","log","allImages","Object","toConsumableArray","setState","sort","Math","random","_this2","this","displayimages","map","eachitem","index","react_default","a","createElement","key","className","src","onClick","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9677b9a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.e2f2d6d9.png\";","module.exports = __webpack_public_path__ + \"static/media/2.12679784.png\";","module.exports = __webpack_public_path__ + \"static/media/3.d9037dbb.png\";","module.exports = __webpack_public_path__ + \"static/media/4.a0b7a2c9.png\";","module.exports = __webpack_public_path__ + \"static/media/5.1a8b5655.png\";","module.exports = __webpack_public_path__ + \"static/media/6.46d2f50e.png\";","module.exports = __webpack_public_path__ + \"static/media/7.4f8a9803.png\";","module.exports = __webpack_public_path__ + \"static/media/8.3aca559b.png\";","module.exports = __webpack_public_path__ + \"static/media/9.d452b31d.png\";","module.exports = __webpack_public_path__ + \"static/media/10.14dd80c4.png\";","module.exports = __webpack_public_path__ + \"static/media/11.6060f2db.png\";","module.exports = __webpack_public_path__ + \"static/media/12.81f695fc.png\";","module.exports = __webpack_public_path__ + \"static/media/react.2bee11a8.png\";","import React, { Component } from 'react';\nimport image1 from './images/1.png';\nimport image2 from './images/2.png';\nimport image3 from './images/3.png';\nimport image4 from './images/4.png';\nimport image5 from './images/5.png';\nimport image6 from './images/6.png';\nimport image7 from './images/7.png';\nimport image8 from './images/8.png';\nimport image9 from './images/9.png';\nimport image10 from './images/10.png';\nimport image11 from './images/11.png';\nimport image12 from './images/12.png';\nimport react from './images/react.png';\n\n\nimport './App.css';\n\nvar images =[\n  {\n    id:1,\n    url: image1,\n    clicked:false\n  },\n  {\n    id:2,\n    url: image2,\n    clicked:false\n  },\n  {\n    id:3,\n    url: image3,\n    clicked:false\n  },\n  {\n    id:4,\n    url: image4,\n    clicked:false\n  },\n  {\n    id:5,\n    url: image5,\n    clicked:false\n  },\n  {\n    id:6,\n    url: image6,\n    clicked:false\n  },\n  {\n    id:7,\n    url: image7,\n    clicked:false\n  },\n  {\n    id:8,\n    url: image8,\n    clicked:false\n  },\n  {\n    id:9,\n    url: image9,\n    clicked:false\n  },\n  {\n    id:10,\n    url: image10,\n    clicked:false\n  },\n  {\n    id:11,\n    url: image11,\n    clicked:false\n  },\n  {\n    id:12,\n    url: image12,\n    clicked:false\n  },\n];\n\nclass App extends Component {\n\n  state = {\n    images:images,\n    score: 0,\n    message: \"Click any image to begin\"\n    \n  };\n\n\n  handleimageclick = (id) => {\n\n    let score = this.state.score , message;\n    console.log(id);  \n    console.log(this.state);\n    let allImages = [...this.state.images]\n    const isClicked = allImages[id].clicked\n    if(!isClicked){\n      score++\n      message= \"You Guessed Incorrectly\"\n    }else{\n      score > 0 && score--\n      message=\"You Guessed Correctly and clicked!\"\n    }\n    allImages[id].clicked =  true\n    this.setState( {images:allImages.sort(() => Math.random() - 0.5), score, message})\n      \n  }\n\n\n\n  render() {\n\n    var displayimages = this.state.images.map ((eachitem,index) => \n      <img  key={index} className=\"click-image\"  src={eachitem.url} onClick={() =>this.handleimageclick(index)} alt={eachitem.id}></img>\n    )\n\n    return (\n      <div className=\"App\">\n\n          <div className=\"header\"> \n            <span> <strong>  Christmas Clicky Game!!!  </strong> </span>\n            <span> <strong>  {this.state.message} </strong>  </span>\n            <span> <strong>  Score: {this.state.score} </strong>  </span>\n            {/* <div className=\"instructions\"> \n              <p>Lets Click!</p>\n              <p>Click on an image to earn points, but don't click on any more than once!</p>\n            </div> */}\n           \n          </div>\n\n          <div className=\"container\"> \n               <div className=\"images\"> {displayimages} </div>\n          </div>\n\n          <footer className=\"footer\">\n            <div className=\"bottom\">\n                {/* <img alt=\"react\" src={react}> </img> */}\n                <p > <strong> Copyright Â© 2018 by Gabriela Elizabeth Menocal Cover </strong>  </p>\n\n             </div>\n          \n          </footer>\n\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}